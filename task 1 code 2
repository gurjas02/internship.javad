import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class CorrectAnswer extends JFrame {
    private final int numberToGuess = 65; // Fixed number to guess
    private int attemptsLeft;
    private int totalScore;
    private boolean gameActive;

    private JTextField guessField;
    private JLabel feedbackLabel;
    private JLabel attemptsLabel;
    private JLabel scoreLabel;
    private JButton guessButton;
    private JButton playAgainButton;
    private CardLayout cardLayout;
    private JPanel mainPanel;
    private JLabel correctAnswerLabel;
    private JLabel congratsLabel;

    public CorrectAnswer() {
        setTitle("Number Guessing Game");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        cardLayout = new CardLayout();
        mainPanel = new JPanel(cardLayout);

        createWelcomePage();
        createGamePage();
        createResultPage();
        createCongratsPage();

        add(mainPanel);
        initializeGame();
    }

    private void createWelcomePage() {
        JPanel welcomePanel = new JPanel(new BorderLayout());
        welcomePanel.setBackground(Color.CYAN);

        JLabel welcomeLabel = new JLabel("Welcome to the Number Guessing Game!", SwingConstants.CENTER);
        welcomeLabel.setFont(new Font("Serif", Font.BOLD, 24));
        welcomeLabel.setForeground(Color.BLUE);
        welcomePanel.add(welcomeLabel, BorderLayout.CENTER);

        JButton startButton = new JButton("Start Game");
        startButton.setFont(new Font("Serif", Font.BOLD, 18));
        startButton.setBackground(Color.GREEN);
        startButton.setForeground(Color.BLACK);
        startButton.addActionListener(e -> cardLayout.show(mainPanel, "GamePage"));
        welcomePanel.add(startButton, BorderLayout.SOUTH);

        mainPanel.add(welcomePanel, "WelcomePage");
    }

    private void createGamePage() {
        JPanel gamePanel = new JPanel(new GridLayout(6, 1));

        JLabel instructionLabel = new JLabel("Guess the number between 1 and 100", SwingConstants.CENTER);
        gamePanel.add(instructionLabel);

        guessField = new JTextField();
        gamePanel.add(guessField);

        guessButton = new JButton("Guess");
        gamePanel.add(guessButton);

        feedbackLabel = new JLabel("", SwingConstants.CENTER);
        gamePanel.add(feedbackLabel);

        attemptsLabel = new JLabel("", SwingConstants.CENTER);
        gamePanel.add(attemptsLabel);

        scoreLabel = new JLabel("Score: 0", SwingConstants.CENTER);
        gamePanel.add(scoreLabel);

        playAgainButton = new JButton("Play Again");
        playAgainButton.setEnabled(false);
        gamePanel.add(playAgainButton);

        guessButton.addActionListener(new GuessButtonListener());
        playAgainButton.addActionListener(new PlayAgainButtonListener());

        mainPanel.add(gamePanel, "GamePage");
    }

    private void createResultPage() {
        JPanel resultPanel = new JPanel(new BorderLayout());
        resultPanel.setBackground(Color.PINK);

        correctAnswerLabel = new JLabel("", SwingConstants.CENTER);
        correctAnswerLabel.setFont(new Font("Serif", Font.BOLD, 24));
        correctAnswerLabel.setForeground(Color.RED);
        resultPanel.add(correctAnswerLabel, BorderLayout.CENTER);

        JButton returnToWelcomeButton = new JButton("Return to Welcome Page");
        returnToWelcomeButton.setFont(new Font("Serif", Font.BOLD, 18));
        returnToWelcomeButton.setBackground(Color.GREEN);
        returnToWelcomeButton.setForeground(Color.BLACK);
        returnToWelcomeButton.addActionListener(e -> {
            totalScore = 0; // Reset score
            cardLayout.show(mainPanel, "WelcomePage");
        });
        resultPanel.add(returnToWelcomeButton, BorderLayout.SOUTH);

        mainPanel.add(resultPanel, "ResultPage");
    }

    private void createCongratsPage() {
        JPanel congratsPanel = new JPanel(new BorderLayout());
        congratsPanel.setBackground(Color.GREEN);

        congratsLabel = new JLabel("Congratulations! You have guessed the right number", SwingConstants.CENTER);
        congratsLabel.setFont(new Font("Serif", Font.BOLD, 24));
        congratsLabel.setForeground(Color.BLUE);
        congratsPanel.add(congratsLabel, BorderLayout.CENTER);

        JButton returnToWelcomeButton = new JButton("Return to Welcome Page");
        returnToWelcomeButton.setFont(new Font("Serif", Font.BOLD, 18));
        returnToWelcomeButton.setBackground(Color.CYAN);
        returnToWelcomeButton.setForeground(Color.BLACK);
        returnToWelcomeButton.addActionListener(e -> {
            totalScore = 0; // Reset score
            cardLayout.show(mainPanel, "WelcomePage");
        });
        congratsPanel.add(returnToWelcomeButton, BorderLayout.SOUTH);

        mainPanel.add(congratsPanel, "CongratsPage");
    }

    private void initializeGame() {
        attemptsLeft = 10;
        gameActive = true;
        guessField.setText("");
        feedbackLabel.setText("Enter your guess:");
        attemptsLabel.setText("Attempts left: " + attemptsLeft);
        guessButton.setEnabled(true);
        playAgainButton.setEnabled(false);
    }

    private class GuessButtonListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (!gameActive) {
                return;
            }

            try {
                int guess = Integer.parseInt(guessField.getText());
                attemptsLeft--;

                if (guess == numberToGuess) {
                    feedbackLabel.setText("Congratulations! You guessed the correct number.");
                    totalScore += attemptsLeft + 1;
                    gameActive = false;
                    guessButton.setEnabled(false);
                    playAgainButton.setEnabled(true);
                    cardLayout.show(mainPanel, "CongratsPage");
                } else if (guess < numberToGuess) {
                    feedbackLabel.setText("Too low. Try again.");
                } else {
                    feedbackLabel.setText("Too high. Try again.");
                }

                attemptsLabel.setText("Attempts left: " + attemptsLeft);

                if (attemptsLeft <= 0 && guess != numberToGuess) {
                    feedbackLabel.setText("Out of attempts! The correct number was " + numberToGuess);
                    gameActive = false;
                    guessButton.setEnabled(false);
                    playAgainButton.setEnabled(true);
                    correctAnswerLabel.setText("The correct number was " + numberToGuess);
                    cardLayout.show(mainPanel, "ResultPage");
                }

                scoreLabel.setText("Score: " + totalScore);

            } catch (NumberFormatException ex) {
                feedbackLabel.setText("Please enter a valid number.");
            }
        }
    }

    private class PlayAgainButtonListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            initializeGame();
            cardLayout.show(mainPanel, "GamePage");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            CorrectAnswer game = new CorrectAnswer();
            game.setVisible(true);
        });
    }
}
